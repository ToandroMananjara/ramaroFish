CREATE TABLE "users" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "username" varchar UNIQUE NOT NULL,
  "email" varchar UNIQUE NOT NULL,
  "password" varchar NOT NULL,
  "created_at" timestamp,
  "country" varchar,
  "city" varchar,
  "company" bool DEFAULT false,
  "language" varchar,
  "profile_picture" varchar,
  "is_deleted" bool DEFAULT false,
  "is_premium_user" bool DEFAULT false
);

CREATE TABLE "companies" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "company_name" varchar UNIQUE NOT NULL,
  "NIF" varchar UNIQUE NOT NULL,
  "STAT" varchar UNIQUE NOT NULL,
  "localisation" varchar,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "company_members" (
  "user_id" integer NOT NULL,
  "company_id" integer NOT NULL,
  "role" varchar DEFAULT 'member',
  "joined_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "publications" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "owner_user_id" integer,
  "owner_company_id" integer,
  "publication_type" varchar NOT NULL,
  "publication_title" varchar NOT NULL,
  "content" text NOT NULL,
  "media" varchar,
  "category_id" integer,
  "price" decimal(10,2),
  "initial_stock" decimal(10,2),
  "current_stock" decimal(10,2),
  "max_weight" decimal(10,2),
  "min_weight" decimal(10,2),
  "devise_type" varchar DEFAULT 'mga',
  "livraison" bool DEFAULT false,
  "location" varchar NOT NULL,
  "status" varchar DEFAULT 'active',
  "created_at" timestamp,
  "updated_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "categories" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "name" varchar UNIQUE NOT NULL,
  "description" text,
  "parent_category_id" integer
);

CREATE TABLE "publication_comments" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "publication_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "comment_text" text NOT NULL,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "reactions" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "publication_id" integer NOT NULL,
  "user_id" integer NOT NULL,
  "reaction_type" varchar NOT NULL DEFAULT 'like',
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "messages" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "sender_id" integer NOT NULL,
  "receiver_id" integer NOT NULL,
  "content" text NOT NULL,
  "is_read" bool DEFAULT false,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false,
  "conversation_id" integer NOT NULL
);

CREATE TABLE "conversations" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user1_id" integer NOT NULL,
  "user2_id" integer NOT NULL,
  "last_message_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "notifications" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "user_id" integer NOT NULL,
  "type" varchar NOT NULL,
  "reference_id" integer,
  "is_read" bool DEFAULT false,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false,
  "sub_type" varchar
);

CREATE TABLE "followers" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "follower_id" integer NOT NULL,
  "following_id" integer NOT NULL,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "transactions" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "buyer_id" integer NOT NULL,
  "seller_id" integer NOT NULL,
  "publication_id" integer NOT NULL,
  "quantity" integer DEFAULT 1,
  "total_price" decimal(10,2) NOT NULL,
  "transaction_date" timestamp NOT NULL,
  "status" varchar DEFAULT 'pending',
  "is_deleted" bool DEFAULT false
);

CREATE TABLE "reviews" (
  "id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
  "transaction_id" integer NOT NULL,
  "reviewer_id" integer NOT NULL,
  "reviewee_id" integer NOT NULL,
  "rating" integer NOT NULL,
  "comment" text,
  "created_at" timestamp,
  "is_deleted" bool DEFAULT false
);

ALTER TABLE "company_members" ADD FOREIGN KEY ("company_id") REFERENCES "companies" ("id");

ALTER TABLE "company_members" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "publications" ADD FOREIGN KEY ("owner_user_id") REFERENCES "users" ("id");

ALTER TABLE "publications" ADD FOREIGN KEY ("owner_company_id") REFERENCES "companies" ("id");

ALTER TABLE "publication_comments" ADD FOREIGN KEY ("publication_id") REFERENCES "publications" ("id");

ALTER TABLE "publication_comments" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "reactions" ADD FOREIGN KEY ("publication_id") REFERENCES "publications" ("id");

ALTER TABLE "reactions" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("sender_id") REFERENCES "users" ("id");

ALTER TABLE "messages" ADD FOREIGN KEY ("receiver_id") REFERENCES "users" ("id");

ALTER TABLE "conversations" ADD FOREIGN KEY ("user1_id") REFERENCES "users" ("id");

ALTER TABLE "conversations" ADD FOREIGN KEY ("user2_id") REFERENCES "users" ("id");

ALTER TABLE "notifications" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("id");

ALTER TABLE "followers" ADD FOREIGN KEY ("follower_id") REFERENCES "users" ("id");

ALTER TABLE "followers" ADD FOREIGN KEY ("following_id") REFERENCES "users" ("id");

ALTER TABLE "publications" ADD FOREIGN KEY ("category_id") REFERENCES "categories" ("id");

ALTER TABLE "categories" ADD FOREIGN KEY ("parent_category_id") REFERENCES "categories" ("id");

ALTER TABLE "transactions" ADD FOREIGN KEY ("buyer_id") REFERENCES "users" ("id");

ALTER TABLE "transactions" ADD FOREIGN KEY ("seller_id") REFERENCES "users" ("id");

ALTER TABLE "transactions" ADD FOREIGN KEY ("publication_id") REFERENCES "publications" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("transaction_id") REFERENCES "transactions" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("reviewer_id") REFERENCES "users" ("id");

ALTER TABLE "reviews" ADD FOREIGN KEY ("reviewee_id") REFERENCES "users" ("id");

ALTER TABLE "conversations" ADD FOREIGN KEY ("id") REFERENCES "messages" ("conversation_id");
